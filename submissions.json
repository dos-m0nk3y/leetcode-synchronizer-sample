[
  {
    "id": 1,
    "title": "Two Sum",
    "title_slug": "two-sum",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "id": 2,
    "title": "Add Two Numbers",
    "title_slug": "add-two-numbers",
    "difficulty": "Medium",
    "skills": [
      "Linked List",
      "Math",
      "Recursion"
    ]
  },
  {
    "id": 3,
    "title": "Longest Substring Without Repeating Characters",
    "title_slug": "longest-substring-without-repeating-characters",
    "difficulty": "Medium",
    "skills": [
      "Hash Table",
      "Sliding Window",
      "String"
    ]
  },
  {
    "id": 9,
    "title": "Palindrome Number",
    "title_slug": "palindrome-number",
    "difficulty": "Easy",
    "skills": [
      "Math"
    ]
  },
  {
    "id": 13,
    "title": "Roman to Integer",
    "title_slug": "roman-to-integer",
    "difficulty": "Easy",
    "skills": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "id": 14,
    "title": "Longest Common Prefix",
    "title_slug": "longest-common-prefix",
    "difficulty": "Easy",
    "skills": [
      "String",
      "Trie"
    ]
  },
  {
    "id": 20,
    "title": "Valid Parentheses",
    "title_slug": "valid-parentheses",
    "difficulty": "Easy",
    "skills": [
      "Stack",
      "String"
    ]
  },
  {
    "id": 21,
    "title": "Merge Two Sorted Lists",
    "title_slug": "merge-two-sorted-lists",
    "difficulty": "Easy",
    "skills": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "id": 26,
    "title": "Remove Duplicates from Sorted Array",
    "title_slug": "remove-duplicates-from-sorted-array",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "id": 27,
    "title": "Remove Element",
    "title_slug": "remove-element",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "id": 28,
    "title": "Find the Index of the First Occurrence in a String",
    "title_slug": "find-the-index-of-the-first-occurrence-in-a-string",
    "difficulty": "Easy",
    "skills": [
      "String",
      "String Matching",
      "Two Pointers"
    ]
  },
  {
    "id": 35,
    "title": "Search Insert Position",
    "title_slug": "search-insert-position",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "id": 58,
    "title": "Length of Last Word",
    "title_slug": "length-of-last-word",
    "difficulty": "Easy",
    "skills": [
      "String"
    ]
  },
  {
    "id": 66,
    "title": "Plus One",
    "title_slug": "plus-one",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Math"
    ]
  },
  {
    "id": 67,
    "title": "Add Binary",
    "title_slug": "add-binary",
    "difficulty": "Easy",
    "skills": [
      "Bit Manipulation",
      "Math",
      "Simulation",
      "String"
    ]
  },
  {
    "id": 69,
    "title": "Sqrt(x)",
    "title_slug": "sqrtx",
    "difficulty": "Easy",
    "skills": [
      "Binary Search",
      "Math"
    ]
  },
  {
    "id": 70,
    "title": "Climbing Stairs",
    "title_slug": "climbing-stairs",
    "difficulty": "Easy",
    "skills": [
      "Dynamic Programming",
      "Math",
      "Memoization"
    ]
  },
  {
    "id": 83,
    "title": "Remove Duplicates from Sorted List",
    "title_slug": "remove-duplicates-from-sorted-list",
    "difficulty": "Easy",
    "skills": [
      "Linked List"
    ]
  },
  {
    "id": 88,
    "title": "Merge Sorted Array",
    "title_slug": "merge-sorted-array",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Sorting",
      "Two Pointers"
    ]
  },
  {
    "id": 94,
    "title": "Binary Tree Inorder Traversal",
    "title_slug": "binary-tree-inorder-traversal",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Stack",
      "Tree"
    ]
  },
  {
    "id": 100,
    "title": "Same Tree",
    "title_slug": "same-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 101,
    "title": "Symmetric Tree",
    "title_slug": "symmetric-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 104,
    "title": "Maximum Depth of Binary Tree",
    "title_slug": "maximum-depth-of-binary-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 108,
    "title": "Convert Sorted Array to Binary Search Tree",
    "title_slug": "convert-sorted-array-to-binary-search-tree",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Binary Search Tree",
      "Binary Tree",
      "Divide and Conquer",
      "Tree"
    ]
  },
  {
    "id": 110,
    "title": "Balanced Binary Tree",
    "title_slug": "balanced-binary-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 111,
    "title": "Minimum Depth of Binary Tree",
    "title_slug": "minimum-depth-of-binary-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 112,
    "title": "Path Sum",
    "title_slug": "path-sum",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 118,
    "title": "Pascal's Triangle",
    "title_slug": "pascals-triangle",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "id": 119,
    "title": "Pascal's Triangle II",
    "title_slug": "pascals-triangle-ii",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "id": 121,
    "title": "Best Time to Buy and Sell Stock",
    "title_slug": "best-time-to-buy-and-sell-stock",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "id": 125,
    "title": "Valid Palindrome",
    "title_slug": "valid-palindrome",
    "difficulty": "Easy",
    "skills": [
      "String",
      "Two Pointers"
    ]
  },
  {
    "id": 136,
    "title": "Single Number",
    "title_slug": "single-number",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Bit Manipulation"
    ]
  },
  {
    "id": 141,
    "title": "Linked List Cycle",
    "title_slug": "linked-list-cycle",
    "difficulty": "Easy",
    "skills": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ]
  },
  {
    "id": 144,
    "title": "Binary Tree Preorder Traversal",
    "title_slug": "binary-tree-preorder-traversal",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Stack",
      "Tree"
    ]
  },
  {
    "id": 145,
    "title": "Binary Tree Postorder Traversal",
    "title_slug": "binary-tree-postorder-traversal",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Stack",
      "Tree"
    ]
  },
  {
    "id": 157,
    "title": "Read N Characters Given Read4",
    "title_slug": "read-n-characters-given-read4",
    "difficulty": "Easy",
    "skills": [
      "Interactive",
      "Simulation",
      "String"
    ]
  },
  {
    "id": 160,
    "title": "Intersection of Two Linked Lists",
    "title_slug": "intersection-of-two-linked-lists",
    "difficulty": "Easy",
    "skills": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ]
  },
  {
    "id": 163,
    "title": "Missing Ranges",
    "title_slug": "missing-ranges",
    "difficulty": "Easy",
    "skills": [
      "Array"
    ]
  },
  {
    "id": 168,
    "title": "Excel Sheet Column Title",
    "title_slug": "excel-sheet-column-title",
    "difficulty": "Easy",
    "skills": [
      "Math",
      "String"
    ]
  },
  {
    "id": 169,
    "title": "Majority Element",
    "title_slug": "majority-element",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Counting",
      "Divide and Conquer",
      "Hash Table",
      "Sorting"
    ]
  },
  {
    "id": 170,
    "title": "Two Sum III - Data structure design",
    "title_slug": "two-sum-iii-data-structure-design",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "Data Stream",
      "Design",
      "Hash Table",
      "Two Pointers"
    ]
  },
  {
    "id": 171,
    "title": "Excel Sheet Column Number",
    "title_slug": "excel-sheet-column-number",
    "difficulty": "Easy",
    "skills": [
      "Math",
      "String"
    ]
  },
  {
    "id": 175,
    "title": "Combine Two Tables",
    "title_slug": "combine-two-tables",
    "difficulty": "Easy",
    "skills": [
      "Database"
    ]
  },
  {
    "id": 181,
    "title": "Employees Earning More Than Their Managers",
    "title_slug": "employees-earning-more-than-their-managers",
    "difficulty": "Easy",
    "skills": [
      "Database"
    ]
  },
  {
    "id": 182,
    "title": "Duplicate Emails",
    "title_slug": "duplicate-emails",
    "difficulty": "Easy",
    "skills": [
      "Database"
    ]
  },
  {
    "id": 183,
    "title": "Customers Who Never Order",
    "title_slug": "customers-who-never-order",
    "difficulty": "Easy",
    "skills": [
      "Database"
    ]
  },
  {
    "id": 190,
    "title": "Reverse Bits",
    "title_slug": "reverse-bits",
    "difficulty": "Easy",
    "skills": [
      "Bit Manipulation",
      "Divide and Conquer"
    ]
  },
  {
    "id": 191,
    "title": "Number of 1 Bits",
    "title_slug": "number-of-1-bits",
    "difficulty": "Easy",
    "skills": [
      "Bit Manipulation",
      "Divide and Conquer"
    ]
  }
]